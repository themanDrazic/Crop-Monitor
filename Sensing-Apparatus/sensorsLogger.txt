// Add this code to a .ino Arduino file for an Arduino Mega
// Script to combine all sensors and Data Logger
// 6x photocell, Analog Pins A8-A13
// 1x Moisture Sensor, Analog Pin A7
// 1x BH1750, SDA and SCL
// 1x SD Card Data Logger Shield, SPI and Digital Pin 10
// 1x Pushbutton, Digital Pin 22

#include <SPI.h>
#include <SD.h>
#include <Wire.h>

#include <hp_BH1750.h>
#include <Arduino.h>

// Photocell Resistor Variables
const int photocellPins[6] = {A8, A9, A11, A10, A12, A13}; // Closest to furthest from the arduino.
int photocellReadings[6] = {0, 0, 0, 0, 0, 0};

int moisturePin = A7; // Define soil moisture analog pin
int moistureReading = 0; // Define soil moisture reading variable

// Pushbutton variables
const int button = 22;
int buttonFlag = 0;

// BH1750 Light Sensor Variables
hp_BH1750 BH1750; // Create the BH1750 light sensor
float lux = 0.0;

// SD Card Writer
// for the data logging shield, we use digital pin 10 for the SD cs line
const int chipSelect = 10;
// the logging file
File logfile;

void error(char *str)
{
  Serial.print("error: ");
  Serial.println(str);

  while(1);
}

char filename[8] = "L00.CSV";
void setup() {
  Serial.begin(9600);
  pinMode(button, INPUT); // Setup push button pin

  // Setup BH1750 sensor
  if(!BH1750.begin(BH1750_TO_GROUND)){
    Serial.println("BH1750 not found!");
    while (true) {} // halt program code
  }
  BH1750.start();

  // SD Card Setup
  pinMode(chipSelect, OUTPUT);

  if (!SD.begin(chipSelect)) {
    error("SD failed");
  }
  Serial.println("SD Initialized.");

  // create a new file
  for (uint8_t i = 0; i < 100; i++) {
    filename[1] = i/10 + '0';
    filename[2] = i%10 + '0';
    if (! SD.exists(filename)) {
      // only open a new file if it doesn't exist
      logfile = SD.open(filename, FILE_WRITE); 
      break;  // leave the loop!
    }
  }

  if (! logfile) {
    Serial.println("Cannot write a new file. File capacity reached (100/100)");
    while(1);
  }

  Serial.print("Logging to: ");
  Serial.println(filename);

  // Add Data Headers to file
  logfile.println("Ambient Light,Canopy 1,Canopy 2,Canopy 3,Canopy 4,Canopy 5,Canopy 6,Soil Moiture");
  logfile.flush();
}

void loop() {
  buttonFlag = 0;

  // Button loop. Writes data once per press.
  while (digitalRead(button) == 1){
    if (buttonFlag == 0){
      // Read sensors
      read_photocells();
      read_BH1750();
      read_moisture_probe();
      // print_readings(); // Print readings to serial monitor for debugging.

      // Write all readings to SD card
      write_readings();
      logfile.flush();

      // Only take one sample per button press - Could upgrade to ISR if needed
      buttonFlag = 1;
    }
  }
}

// Function reads all photocells
void read_photocells(){
  // Read all photocell resistors
  photocellReadings[0] = analogRead(photocellPins[0]); // Read photoresistor 1
  photocellReadings[1] = analogRead(photocellPins[1]); // Read photoresistor 2
  photocellReadings[2] = analogRead(photocellPins[2]); // Read photoresistor 3
  photocellReadings[3] = analogRead(photocellPins[3]); // Read photoresistor 4
  photocellReadings[4] = analogRead(photocellPins[4]); // Read photoresistor 5
  photocellReadings[5] = analogRead(photocellPins[5]); // Read photoresistor 6
}

// Function that reads moisture sensor
void read_moisture_probe(){
  moistureReading = analogRead(moisturePin);
}

// Function that reads the BH1750 light sensor (ambient sensor) 
void read_BH1750(){
  // Measure lux of ambient lighting (BH1750)
  if(BH1750.hasValue() == true) {
    lux = BH1750.getLux(); // wait until a conversion is finished
    BH1750.start();
  }
  else {
    lux = 0.0;
  }
}

void write_readings() {
  // Write all readings to the SD card
  logfile.print(String(lux) + ",");
  // string data;
  for(int i = 0; i < 6; i++){
    logfile.print(String(photocellReadings[i]) + ",");
  }
  logfile.print(String(moistureReading) + ",");
  logfile.println("");
  delay(10);
  // logfile.flush();
  delay(15);
}

void print_readings() {
  // Print all readings to the Serial Monitor
  Serial.print(String(lux) + ",");
  for (int i = 0; i < 6; i++){
    Serial.print(String(photocellReadings[i]) + ",");
  }
  Serial.print(String(moistureReading));
  Serial.println("");
}
